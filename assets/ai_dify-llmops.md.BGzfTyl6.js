/* empty css                                                               */import{_ as t,c as a,o as e,aa as o}from"./chunks/framework.CeN9Tan-.js";const y=JSON.parse('{"title":"Dify 工作流","description":null,"frontmatter":{"description":null,"layoutClass":"fuye-single-page-layout","outline":[2,3,4]},"headers":[],"relativePath":"ai/dify-llmops.md","filePath":"ai/dify-llmops.md"}'),i={name:"ai/dify-llmops.md"},l=o('<h1 id="dify-工作流" tabindex="-1">Dify 工作流 <a class="header-anchor" href="#dify-工作流" aria-label="Permalink to &quot;Dify 工作流&quot;">​</a></h1><p><strong>大模型 + 工作流</strong>这种组合方式，可以：</p><ol><li>可以降低任务处理的门槛</li></ol><p>工作流可以把一个复杂任务分解成多个简单任务，降低了每一个单一任务的复杂度，每个任务由一个大模型来处理，这样可以减少我们对提示词以及大模型推理能力的依赖，同时可以提升大模型处理复杂任务的性能和容错能力。</p><ol start="2"><li>可以有效提升任务效率</li></ol><p>当把一个工作流设计完成以后，后面用起来会非常方便，无需一轮一轮的对话和纠正。只需要把完成任务所需要的<strong>必要元素</strong>丢给工作流，工作流就会直接输出结果。</p><p>备注：Coze、FastGPT、Zapier也都在往这方面进化。</p>',7),s=[l];function r(n,p,_,d,c,f){return e(),a("div",null,s)}const h=t(i,[["render",r]]);export{y as __pageData,h as default};
